version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgress
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: parol123
      POSTGRES_DB: baktar_user
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - microservices

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: appuser
      RABBITMQ_DEFAULT_PASS: secret123
      RABBITMQ_ERLANG_COOKIE: "mycookie"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadminn
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - microservices

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    depends_on:
      - postgres
      - rabbitmq
    env_file:
      - ./user-service/.env
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
    networks:
      - microservices

  order-service:
    build:
      context: ./order-service
    container_name: order-service
    depends_on:
      - postgres
      - rabbitmq
    env_file:
      - ./order-service/.env
    ports:
      - "8001:8001"
    environment:
      - PORT=8001
    networks:
      - microservices

volumes:
  pgdata:
  rabbitmq_data:

networks:
  microservices:
    driver: bridge
